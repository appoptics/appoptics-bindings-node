name: Group Build & Test (Pull)

on: 
  pull_request: 

  workflow_dispatch:

jobs:
  load-build-group:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout ${{ github.ref }}
      uses: actions/checkout@v2

      # comments for: build-group.json
      # build with the lowest versions of the OSes supported so the glibc/musl versions
      # are the oldest/most compatible. 
      # note: some of those images are no longer supported officially (https://hub.docker.com/_/node)
    - name: Load build group data
      id: set-matrix
      run: .github/scripts/matrix-from-json.sh .github/config/build-group.json

  build-group-test:
    runs-on: ubuntu-latest 
    needs: load-build-group
    strategy:
      matrix: ${{fromJson(needs.load-build-group.outputs.matrix)}}

    env:
      AO_TOKEN_PROD: ${{ secrets.AO_TOKEN_PROD }}

    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v2

      - name: Create Container  ${{ matrix.image }}
        id: create
        run: .github/scripts/container-from-matrix-input.sh ${{ matrix.image }}

      # must install specific dependency for liboboe.js before a build
      - name: NPM Install linux-os-info
        run: docker exec ${{ steps.create.outputs.containerId }} npm install --save linux-os-info --unsafe-perm

      # runs: node setup-liboboe.js && node-pre-gyp install --build-from-source
      - name: NPM Install with Rebuild fron source
        run: docker exec ${{ steps.create.outputs.containerId }} npm run rebuild --unsafe-perm

      - name: Show Artifacts
        run: docker exec ${{ steps.create.outputs.containerId }} ls -R -al ./dist

      - name: Run tests
        run: docker exec ${{ steps.create.outputs.containerId }} npm test

      - name: Stop container
        if: always()
        run: docker stop ${{ steps.create.outputs.containerId }}
